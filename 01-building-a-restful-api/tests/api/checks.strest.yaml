---
version: 2

variables:
  baseUrl: http://localhost:3000/api
  endpoint: checks
  schemaValidate:
    properties:
      id:
        type: string
      method:
        type: string
      protocol:
        type: string
      url:
        type: string
      timeoutSeconds:
        type: number
      successCodes:
        type: array
    required:
      - id
      - method
      - protocol
      - url
      - timeoutSeconds
      - successCodes

requests:
  # setup
  checks_user_create:
    request:
      url: '<$ baseUrl $>/users'
      method: POST
      postData:
        mimeType: 'application/json'
        text:
          phone: '<$ Faker("phone.phoneNumberFormat") $>'
          password: password
          firstName: '<$ Faker("name.firstName") $>'
          lastName: '<$ Faker("name.lastName") $>'
          tosAgreement: 'true'
    # log: true

  checks_token_create:
    request:
      url: '<$ baseUrl $>/tokens'
      method: POST
      postData:
        mimeType: 'application/json'
        text:
          phone: '<$ checks_user_create.content.phone $>'
          password: password
  # end setup

  # start unauthenticated requests
  checks_get_unauthenticated:
    request:
      url: <$ baseUrl $>/<$ endpoint $>/foo
      method: GET
    validate:
      - jsonpath: status
        expect: 401

  checks_post_unauthenticated:
    request:
      url: <$ baseUrl $>/<$ endpoint $>
      method: POST
    validate:
      - jsonpath: status
        expect: 401

  checks_put_unauthenticated:
    request:
      url: <$ baseUrl $>/<$ endpoint $>/foo
      method: PUT
    validate:
      - jsonpath: status
        expect: 401

  checks_delete_unauthenticated:
    request:
      url: <$ baseUrl $>/<$ endpoint $>/<$ checks_user_create.content.phone $>
      method: DELETE
    validate:
      - jsonpath: status
        expect: 401
  # end unauthenticated requests

  # success responses
  checks_create:
    request:
      url: '<$ baseUrl $>/<$ endpoint $>'
      method: POST
      headers:
        - name: phone
          value: '<$ checks_user_create.content.phone $>'
        - name: token
          value: '<$ checks_token_create.content.id $>'
      postData:
        mimeType: 'application/json'
        text:
          protocol: 'https'
          url: 'google.com'
          method: 'get'
          successCodes: [200]
          timeoutSeconds: 5
    validate:
      - jsonpath: status
        expect: 201
      - jsonpath: content
        jsonschema: <$ schemaValidate | dump | safe $>safe
    # log: true

  checks_get:
    request:
      url: '<$ baseUrl $>/<$ endpoint $>/<$ checks_create.content.id $>'
      method: GET
      headers:
        - name: phone
          value: <$ checks_user_create.content.phone $>
        - name: token
          value: <$ checks_token_create.content.id $>
    validate:
      - jsonpath: status
        expect: 200
      - jsonpath: content
        jsonschema: <$ schemaValidate | dump | safe $>
    # log: true

  checks_put:
    request:
      url: '<$ baseUrl $>/<$ endpoint $>/<$ checks_create.content.id $>'
      method: PUT
      headers:
        - name: phone
          value: <$ checks_user_create.content.phone $>
        - name: token
          value: <$ checks_token_create.content.id $>
      postData:
        mimeType: 'application/json'
        text:
          protocol: 'https'
          url: 'bing.com'
          method: 'get'
          successCodes: [200]
          timeoutSeconds: 4
    validate:
      - jsonpath: status
        expect: 200
      - jsonpath: content.timeoutSeconds
        expect: 4
    # log: true

  # start bad requests
  checks_create_missing_parameters:
    request:
      url: '<$ baseUrl $>/<$ endpoint $>'
      method: POST
      headers:
        - name: phone
          value: <$ checks_user_create.content.phone $>
        - name: token
          value: <$ checks_token_create.content.id $>
    validate:
      - jsonpath: status
        expect: 400
  # end bad requests

  # start cleanup
  checks_user_delete:
    request:
      url: '<$ baseUrl $>/users/<$ checks_user_create.content.phone $>/'
      method: DELETE
  # end cleanup
