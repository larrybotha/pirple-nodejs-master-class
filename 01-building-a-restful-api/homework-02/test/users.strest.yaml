version: 2

variables:
  endpoint: users
  schemaValidate:
      properties:
        address:
          type: [string]
        email:
          type: [string]
        name:
          type: [string]
        password:
          type: [string]
      required:
        - email
        - password

requests:
  users_get_nonexistent:
    request:
      url: <$ globalBaseUrl $>/<$ endpoint $>/foo@test.com
      method: GET
    validate:
      - jsonpath: status
        expect: 404

  users_delete_nonexisting:
    request:
      url: <$ globalBaseUrl $>/<$ endpoint $>/foo@test.com
      method: DELETE
    validate:
      - jsonpath: status
        expect: 204

  users_create:
    request:
      url: <$ globalBaseUrl $>/<$ endpoint $>
      method: POST
      postData:
        mimeType: 'application/json'
        text:
          email: 'test@example.com'
          password: 'password'
    validate:
    - jsonpath: status
      expect: 201
    - jsonpath: content
      jsonschema: <$ schemaValidate | dump | safe $>

  users_get:
    request:
      url: <$ globalBaseUrl $>/<$ endpoint $>/<$ users_create.content.email $>
      method: GET
    validate:
      - jsonpath: status
        expect: 200
      - jsonpath: content
        jsonschema: <$ schemaValidate | dump | safe $>

  users_delete:
    request:
      url: <$ globalBaseUrl $>/<$ endpoint $>/<$ users_create.content.email $>
      method: DELETE
    validate:
      - jsonpath: status
        expect: 200

  users_create_missing_email:
    request:
      url: <$ globalBaseUrl $>/<$ endpoint $>
      method: POST
      postData:
        mimeType: 'application/json'
        text:
          password: <$ password $>
    validate:
    - jsonpath: status
      expect: 400

  users_create_missing_password:
    request:
      url: <$ globalBaseUrl $>/<$ endpoint $>
      method: POST
      postData:
        mimeType: 'application/json'
        text:
          email: <$ email $>
    validate:
    - jsonpath: status
      expect: 400
