version: 2

variables:
  endpoint: /tokens
  schemaValidate:
      properties:
        id:
          type: [string]
        expires:
          type: [number]
        email:
          type: [string]
      required:
        - id
        - expires
        - email

requests:
  tokens_create:
    request:
      url: <$ globalBaseUrl $><$ endpoint $>
      method: POST
      postData:
        mimeType: 'application/json'
        text:
          password: 'password'
          email: 'test@example.com'
    validate:
    - jsonpath: status
      expect: 201
    - jsonpath: content
      jsonschema: <$ schemaValidate | dump | safe $>

  tokens_create_missing_email:
    request:
      url: <$ globalBaseUrl $><$ endpoint $>
      method: POST
      postData:
        mimeType: 'application/json'
        text:
          password: 'password'
    validate:
    - jsonpath: status
      expect: 400

  tokens_create_missing_password:
    request:
      url: <$ globalBaseUrl $><$ endpoint $>
      method: POST
      postData:
        mimeType: 'application/json'
        text:
          email: 'test@example.com'
    validate:
    - jsonpath: status
      expect: 400
